<?xml version="1.0" encoding="UTF-8"?>
<!-- autogenerated 2021-12-14T16:02:57.305-05:00 following model in example-set.xspec-->
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
   xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
   xmlns:j="http://www.w3.org/2005/xpath-functions"
   stylesheet="../../../toolchains/xslt-M4/schema-gen/make-json-schema-metamap.xsl"
   run-as="external" xmlns:ov="http://csrc.nist.gov/ns/oscal/test/variable">

  
   <!--<x:scenario label="Base test">
      <!-\- Alternative model for test scrubbing both the result and the expected
           result for comparison -\->
      <x:context href="profile-resolution-examples/base-test_profile.xml"/>
      <x:variable name="ov:expected-output"
         href="profile-resolution-examples/output-expected/base-test_profile_RESOLVED.xml"/>
      <x:expect label="Base test - fully resolved"
         test="opr:scrub($x:result)" select="opr:scrub($ov:expected-output)"/>
   </x:scenario>-->

   <!--unconstrained constrained-open constrained-closed constrained-narrow constrained-sortof-->
   <x:scenario label="defining a token value with no enumerations">
      <x:context href="json-value-testing-mini-metaschema-COMPOSED.xml"
         select="/*/m:define-field[@name='unconstrained']"/>
      <x:expect label="the result should exclude enumerations" xmlns="http://www.w3.org/2005/xpath-functions">
         <map key="oscal-value-testing-mini-oscal-value-testing-mini:unconstrained">
            <string key="title">Unconstrained</string>
            <string key="description">A field whose value is constrained only by its nominal datatype, 'token'.</string>
            <string key="$id">#field_oscal-value-testing-mini_unconstrained</string>
            <string key="type">object</string>
            <map key="properties">
               <map key="some">
                  <string key="title">Some Flag</string>
                  <string key="description">Some flag some flag some flag.</string>
                  <string key="$ref">#/definitions/StringDatatype</string>
               </map>
               <map key="token-value">
                  <string key="$ref">#/definitions/TokenDatatype</string>
               </map>
            </map>
            <array key="required">
               <string>token-value</string>
            </array>
            <boolean key="additionalProperties">false</boolean>
         </map>
      </x:expect>
   </x:scenario>
   
   <x:scenario label="defining a token value with enumerations">
      <x:context href="json-value-testing-mini-metaschema-COMPOSED.xml"
         select="/*/m:define-field[@name='constrained-closed']"/>
      <x:expect label="the result should *include* enumerations"
         xmlns="http://www.w3.org/2005/xpath-functions">
         <map key="oscal-value-testing-mini-oscal-value-testing-mini:constrained-closed">
            <string key="title">Constrained closed</string>
            <string key="description">Because allow-other is 'no' an enumeration can be given in the JSON Schema.</string>
            <string key="$id">#field_oscal-value-testing-mini_constrained-closed</string>
            <string key="type">object</string>
            <map key="properties">
               <map key="some">
                  <string key="title">Some Flag</string>
                  <string key="description">Some flag some flag some flag.</string>
                  <string key="$ref">#/definitions/StringDatatype</string>
               </map>
               <map key="token-value">
                  <array key="allOf">
                     <map>
                        <string key="$ref">#/definitions/TokenDatatype</string>
                     </map>
                     <map>
                        <array key="enum">
                           <string>one</string>
                           <string>two</string>
                           <string>three</string>
                           <string>four</string>
                        </array>
                     </map>
                  </array>
               </map>
            </map>
            <array key="required">
               <string>token-value</string>
            </array>
            <boolean key="additionalProperties">false</boolean>
         </map>
      </x:expect>
   </x:scenario>
   
</x:description>
